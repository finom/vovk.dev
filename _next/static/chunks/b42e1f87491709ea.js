(globalThis.TURBOPACK||(globalThis.TURBOPACK=[])).push(["object"==typeof document?document.currentScript:void 0,318,e=>{"use strict";function t(e,t,r){if(null!=t){var i,s;if("object"!=typeof t&&"function"!=typeof t)throw TypeError("Object expected.");if(r){if(!Symbol.asyncDispose)throw TypeError("Symbol.asyncDispose is not defined.");i=t[Symbol.asyncDispose]}if(void 0===i){if(!Symbol.dispose)throw TypeError("Symbol.dispose is not defined.");i=t[Symbol.dispose],r&&(s=i)}if("function"!=typeof i)throw TypeError("Object not disposable.");s&&(i=function(){try{s.call(this)}catch(e){return Promise.reject(e)}}),e.stack.push({value:t,dispose:i,async:r})}else r&&e.stack.push({async:!0});return t}var r="function"==typeof SuppressedError?SuppressedError:function(e,t,r){var i=Error(r);return i.name="SuppressedError",i.error=e,i.suppressed=t,i};function i(e){function t(t){e.error=e.hasError?new r(t,e.error,"An error was suppressed during disposal."):t,e.hasError=!0}var i,s=0;return function r(){for(;i=e.stack.pop();)try{if(!i.async&&1===s)return s=0,e.stack.push(i),Promise.resolve().then(r);if(i.dispose){var o=i.dispose.call(i.value);if(i.async)return s|=2,Promise.resolve(o).then(r,function(e){return t(e),r()})}else s|=1}catch(e){t(e)}if(1===s)return e.hasError?Promise.reject(e.error):Promise.resolve();if(e.hasError)throw e.error}()}var s=e.i(17198),o=e.i(71645),a=e.i(96924),p=e.i(43476);let n={$schema:"https://vovk.dev/api/schema/v3/schema.json",segments:{"":{$schema:"https://vovk.dev/api/schema/v3/segment.json",emitSchema:!0,segmentName:"",segmentType:"segment",controllers:{UserZodRPC:{rpcModuleName:"UserZodRPC",originalControllerName:"UserZodController",prefix:"users-zod",handlers:{updateUser:{validation:{body:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"User object",type:"object",properties:{name:{description:"User full name",type:"string"},age:{description:"User age",type:"number",minimum:0,maximum:120},email:{description:"User email",type:"string",format:"email",pattern:"^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"}},required:["name","age","email"],additionalProperties:!1},query:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{notify:{description:"Notification type",type:"string",enum:["email","push","none"]}},required:["notify"],additionalProperties:!1},params:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{id:{description:"User ID",type:"string",format:"uuid",pattern:"^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"}},required:["id"],additionalProperties:!1},output:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"Response object",type:"object",properties:{success:{description:"Success status",type:"boolean"}},required:["success"],additionalProperties:!1}},operationObject:{summary:"Update user (Zod)",description:"Update user by ID with Zod validation"},path:"{id}",httpMethod:"POST"}}},UserZodWithServiceRPC:{rpcModuleName:"UserZodWithServiceRPC",originalControllerName:"UserZodWithServiceController",prefix:"users-zod-with-service",handlers:{updateUser:{validation:{body:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"User object",type:"object",properties:{name:{description:"User full name",type:"string"},age:{description:"User age",type:"number",minimum:0,maximum:120},email:{description:"User email",type:"string",format:"email",pattern:"^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"}},required:["name","age","email"],additionalProperties:!1},query:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{notify:{description:"Notification type",type:"string",enum:["email","push","none"]}},required:["notify"],additionalProperties:!1},params:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{id:{description:"User ID",type:"string",format:"uuid",pattern:"^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"}},required:["id"],additionalProperties:!1},output:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"Response object",type:"object",properties:{success:{description:"Success status",type:"boolean"},id:{description:"User ID",type:"string",format:"uuid",pattern:"^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"}},required:["success","id"],additionalProperties:!1}},operationObject:{summary:"Update user (Zod with service)",description:"Update user by ID with Zod validation"},path:"{id}",httpMethod:"POST"}}},UserYupRPC:{rpcModuleName:"UserYupRPC",originalControllerName:"UserYupController",prefix:"users-yup",handlers:{updateUser:{validation:{body:{type:"object",properties:{name:{type:"string",description:"User full name"},age:{type:"number",minimum:0,maximum:120,description:"User age"},email:{type:"string",format:"email",description:"User email"}},required:["name","age","email"],description:"User object"},query:{type:"object",properties:{notify:{type:"string",enum:["email","push","none"],description:"Notification type"}},required:["notify"]},params:{type:"object",properties:{id:{type:"string",description:"User ID"}},required:["id"]},output:{type:"object",properties:{success:{type:"boolean",description:"Success status"}},required:["success"],description:"Response object"}},operationObject:{summary:"Update user (Yup)",description:"Update user by ID with Yup validation"},path:"{id}",httpMethod:"POST"}}},UserDtoRPC:{rpcModuleName:"UserDtoRPC",originalControllerName:"UserDtoController",prefix:"users-dto",handlers:{updateUser:{validation:{body:{"x-isDto":!0,definitions:{},properties:{name:{type:"string",description:"User full name"},age:{maximum:120,type:"number",minimum:0,description:"User age"},email:{format:"email",type:"string",description:"User email"}},type:"object",required:["name","age","email"],description:"User object"},query:{"x-isDto":!0,definitions:{},properties:{notify:{type:"string",enum:["email","push","none"],description:"Notification type"}},type:"object",required:["notify"],description:"Query parameters"},params:{"x-isDto":!0,definitions:{},properties:{id:{format:"uuid",type:"string",description:"User ID"}},type:"object",required:["id"],description:"Path parameters"},output:{"x-isDto":!0,definitions:{},properties:{success:{type:"boolean",description:"Success status"}},type:"object",required:["success"],description:"Response object"}},operationObject:{summary:"Update user (DTO)",description:"Update user by ID with DTO validation"},path:"{id}",httpMethod:"POST"}}},UserArktypeRPC:{rpcModuleName:"UserArktypeRPC",originalControllerName:"UserArktypeController",prefix:"users-arktype",handlers:{updateUser:{validation:{body:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{age:{type:"number",description:"User age",exclusiveMaximum:120,exclusiveMinimum:0},email:{type:"string",description:"User email",pattern:"^[\\w%+.-]+@[\\d.A-Za-z-]+\\.[A-Za-z]{2,}$",format:"email"},name:{type:"string",description:"User full name"}},required:["age","email","name"]},query:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{notify:{anyOf:[{const:"email",description:"Notification type"},{const:"none",description:"Notification type"},{const:"push",description:"Notification type"}],description:"Notification type"}},required:["notify"]},params:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{id:{anyOf:[{type:"string",description:"User ID",format:"uuid",pattern:"[\\da-f]{8}-[\\da-f]{4}-[1-8][\\da-f]{3}-[89ab][\\da-f]{3}-[\\da-f]{12}"},{const:"00000000-0000-0000-0000-000000000000",description:"User ID",format:"uuid"},{const:"ffffffff-ffff-ffff-ffff-ffffffffffff",description:"User ID",format:"uuid"}],description:"User ID",format:"uuid"}},required:["id"]},output:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{success:{type:"boolean",description:"Success status"}},required:["success"]}},operationObject:{summary:"Update user (Arktype)",description:"Update user by ID with Arktype validation"},path:"{id}",httpMethod:"POST"}}},UserValibotRPC:{rpcModuleName:"UserValibotRPC",originalControllerName:"UserValibotController",prefix:"users-valibot",handlers:{updateUser:{validation:{body:{$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{name:{type:"string",description:"User full name"},age:{type:"number",minimum:0,maximum:120,description:"User age"},email:{type:"string",format:"email",description:"User email"}},required:["name","age","email"],description:"User object"},query:{$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{notify:{enum:["email","push","none"],description:"Notification type"}},required:["notify"]},params:{$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{id:{type:"string",format:"uuid",description:"User ID"}},required:["id"]},output:{$schema:"http://json-schema.org/draft-07/schema#",type:"object",properties:{success:{type:"boolean",description:"Success status"}},required:["success"],description:"Response object"}},operationObject:{summary:"Update user (Valibot)",description:"Update user by ID with Valibot validation"},path:"{id}",httpMethod:"POST"}}},BasicRPC:{rpcModuleName:"BasicRPC",originalControllerName:"BasicController",prefix:"basic",handlers:{getHello:{path:"greeting",httpMethod:"GET",operationObject:{summary:"Get a greeting",description:"Get a greeting from the server"}},postHello:{path:"greeting",httpMethod:"POST",operationObject:{summary:"Post a greeting",description:"Post a greeting to the server"}}}},BasicRPCWithService:{rpcModuleName:"BasicRPCWithService",originalControllerName:"BasicControllerWithService",prefix:"basic-with-service",handlers:{getHello:{path:"greeting",httpMethod:"GET",operationObject:{summary:"Get a greeting using a service",description:"Get a greeting from the server using a service"}}}},JSONLinesRPC:{rpcModuleName:"JSONLinesRPC",originalControllerName:"JSONLinesController",prefix:"jsonlines",handlers:{streamTokens:{path:"tokens",httpMethod:"GET",operationObject:{summary:"Stream tokens",description:"Stream tokens to the client"}}}},JSONLinesResponseRPC:{rpcModuleName:"JSONLinesResponseRPC",originalControllerName:"JSONLinesResponseController",prefix:"jsonlines-response-object",handlers:{streamTokens:{path:"tokens",httpMethod:"GET",operationObject:{summary:"Stream tokens using Response object",description:"Stream tokens to the client using Response object"}}}},OpenAiRPC:{rpcModuleName:"OpenAiRPC",originalControllerName:"OpenAiController",prefix:"openai",handlers:{createChatCompletion:{path:"chat",httpMethod:"POST",operationObject:{summary:"Create a chat completion",description:"Create a chat completion using OpenAI and yield the response"}}}},AiSdkRPC:{rpcModuleName:"AiSdkRPC",originalControllerName:"AiSdkController",prefix:"ai-sdk",handlers:{chat:{path:"chat",httpMethod:"POST",operationObject:{summary:"Vercel AI SDK",description:"Uses [@ai-sdk/openai](https://www.npmjs.com/package/@ai-sdk/openai) and ai packages to chat with an AI model"}}}},ProxyRPC:{rpcModuleName:"ProxyRPC",originalControllerName:"ProxyController",prefix:"proxy",handlers:{getHello:{path:"greeting",httpMethod:"GET",operationObject:{summary:"Proxy endpoint",description:"Get a greeting from vovk.dev"}}}},PollRPC:{rpcModuleName:"PollRPC",originalControllerName:"PollController",prefix:"poll",handlers:{streamPollResponse:{validation:{query:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{i:{type:"string"}},required:["i"],additionalProperties:!1},iteration:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{i:{type:"number"}},required:["i"],additionalProperties:!1}},path:"",httpMethod:"GET"}}},ProgressiveRPC:{rpcModuleName:"ProgressiveRPC",originalControllerName:"ProgressiveController",prefix:"progressive",handlers:{streamProgressiveResponse:{validation:{iteration:{$schema:"https://json-schema.org/draft/2020-12/schema",anyOf:[{type:"object",properties:{users:{type:"array",items:{type:"object",properties:{id:{type:"number"},name:{type:"string"}},required:["id","name"],additionalProperties:!1}}},required:["users"],additionalProperties:!1},{type:"object",properties:{tasks:{type:"array",items:{type:"object",properties:{id:{type:"number"},title:{type:"string"},completed:{type:"boolean"}},required:["id","title","completed"],additionalProperties:!1}}},required:["tasks"],additionalProperties:!1}]}},path:"",httpMethod:"GET"}}},FormZodRPC:{rpcModuleName:"FormZodRPC",originalControllerName:"FormZodController",prefix:"form-zod",handlers:{submitForm:{validation:{body:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"User object",type:"object",properties:{email:{description:"User email",type:"string",format:"email",pattern:"^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"},resume:{description:"Resume file",examples:["application/pdf"],type:"string",format:"binary",contentEncoding:"binary"},portfolioSamples:{description:"Portfolio samples",anyOf:[{type:"array",items:{type:"string",format:"binary",contentEncoding:"binary"}},{type:"string",format:"binary",contentEncoding:"binary"}]}},required:["email","resume","portfolioSamples"],additionalProperties:!1,"x-isForm":!0},params:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{id:{description:"User ID",type:"string",format:"uuid",pattern:"^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"}},required:["id"],additionalProperties:!1},output:{$schema:"https://json-schema.org/draft/2020-12/schema",description:"Response object",type:"object",properties:{email:{description:"User email",type:"string",format:"email",pattern:"^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"},resume:{type:"object",properties:{name:{description:"Resume file name",examples:["resume.pdf"],type:"string"},size:{description:"Resume file size",type:"number",minimum:0},type:{description:"Resume file type",examples:["application/pdf"],type:"string"}},required:["name","size","type"],additionalProperties:!1},portfolioSamples:{description:"Array of portfolio sample files",type:"array",items:{type:"object",properties:{name:{description:"Portfolio sample file name",examples:["portfolio.zip"],type:"string"},size:{description:"Portfolio sample file size",type:"number",minimum:0},type:{description:"Portfolio sample file type",examples:["application/zip"],type:"string"}},required:["name","size","type"],additionalProperties:!1}}},required:["email","resume","portfolioSamples"],additionalProperties:!1}},operationObject:{summary:"Submit form (Zod)",description:"Submit form with Zod validation"},path:"{id}",httpMethod:"POST"}}}}},static:{$schema:"https://vovk.dev/api/schema/v3/segment.json",emitSchema:!0,segmentName:"static",segmentType:"segment",controllers:{OpenApiRPC:{rpcModuleName:"OpenApiRPC",originalControllerName:"OpenApiController",prefix:"",handlers:{getSpec:{path:"openapi.json",httpMethod:"GET",operationObject:{summary:"OpenAPI spec",description:"Get the OpenAPI spec for the examples API"}}}},StaticParamsRPC:{rpcModuleName:"StaticParamsRPC",originalControllerName:"StaticParamsController",prefix:"static-params",handlers:{getStaticParams:{validation:{params:{$schema:"https://json-schema.org/draft/2020-12/schema",type:"object",properties:{section:{type:"string",enum:["a","b"]},page:{type:"string",enum:["1","2","3"]}},required:["section","page"],additionalProperties:!1}},operationObject:{summary:"Static Params",description:"Get the static params: section and page"},path:"{section}/page{page}.json",httpMethod:"GET"}}}}}},meta:{$schema:"https://vovk.dev/api/schema/v3/meta.json",config:{libs:{},$schema:"https://vovk.dev/api/schema/v3/config.json"}}};function c(){let[e,t]=(0,o.useState)(null),[r,i]=(0,o.useState)(null),[a,n]=(0,o.useState)(null);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsxs)("button",{onClick:()=>{t(null),i(null);let{users:e,tasks:r}=(0,s.progressive)(g.streamProgressiveResponse);n(!1),Promise.all([e.then(t),r.then(i)]).finally(()=>n(!0))},disabled:!1===a,children:["Load Users and Tasks Progressively ",a?"Again":""]}),null!==a&&(0,p.jsx)("h2",{children:"Users"}),null!==a&&!e&&(0,p.jsx)(l,{}),!!e?.length&&e?.map(e=>(0,p.jsx)("ul",{children:(0,p.jsx)("li",{children:e.name})},e.id)),null!==a&&(0,p.jsx)("h2",{children:"Tasks"}),null!==a&&!r&&(0,p.jsx)(l,{}),!!r?.length&&r?.map(e=>(0,p.jsx)("ul",{children:(0,p.jsxs)("li",{children:[e.title," ",e.completed?"✅":""]})},e.id))]})}let l=()=>(0,p.jsx)("ul",{children:[,,,,,].fill(0).map((e,t)=>(0,p.jsx)("li",{children:(0,p.jsx)(a.default,{width:150})},t))});function d(){let[e,r]=(0,o.useState)([]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("button",{onClick:async()=>{let e={stack:[],error:void 0,hasError:!1};try{for await(let i of(r([]),t(e,await h.streamTokens(),!1)))r(e=>[...e,i])}catch(t){e.error=t,e.hasError=!0}finally{i(e)}},children:"Get JSONLines Response"}),(0,p.jsx)("div",{children:e.map(({message:e},t)=>(0,p.jsx)("span",{children:e},t))})]})}function m(){let[e,r]=(0,o.useState)([]);return(0,p.jsxs)(p.Fragment,{children:[(0,p.jsx)("button",{onClick:async()=>{let e={stack:[],error:void 0,hasError:!1};try{for await(let i of(r([]),t(e,await u.streamTokens(),!1)))r(e=>[...e,i])}catch(t){e.error=t,e.hasError=!0}finally{i(e)}},children:"Get JSON Lines response"}),(0,p.jsx)("div",{children:e.map(({message:e},t)=>(0,p.jsx)("span",{children:e},t))})]})}function f(){let[e,r]=(0,o.useState)(0);return(0,o.useEffect)(()=>{(async()=>{let e=0;for(;;){let s={stack:[],error:void 0,hasError:!1};try{for await({i:e}of t(s,await y.streamPollResponse({query:{i:e.toString()}}),!1))r(e);e++}catch(e){s.error=e,s.hasError=!0}finally{i(s)}}})()},[]),(0,p.jsxs)("div",{children:[(0,p.jsx)("p",{children:"Poll Ticker"}),(0,p.jsx)("h2",{children:e})]})}(0,s.createRPC)(n,"","UserZodRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","UserZodWithServiceRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","UserYupRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","UserDtoRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","UserArktypeRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","UserValibotRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","BasicRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","BasicRPCWithService",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"});let h=(0,s.createRPC)(n,"","JSONLinesRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),u=(0,s.createRPC)(n,"","JSONLinesResponseRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"});(0,s.createRPC)(n,"","OpenAiRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","AiSdkRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"","ProxyRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"});let y=(0,s.createRPC)(n,"","PollRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),g=(0,s.createRPC)(n,"","ProgressiveRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"});(0,s.createRPC)(n,"","FormZodRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"static","OpenApiRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),(0,s.createRPC)(n,"static","StaticParamsRPC",e.A(449),{validateOnClient:e.A(12851),apiRoot:"https://examples.vovk.dev/api"}),e.s([],77889),e.i(77889),e.s(["JSONLinesExample",()=>d,"JSONLinesResponseExample",()=>m,"PollExample",()=>f,"ProgressiveExample",()=>c],318)}]);