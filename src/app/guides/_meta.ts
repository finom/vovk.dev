import type { MetaRecord } from 'nextra';

const separator = (title: string) => ({ type: 'separator', title });

const meta = {
  '#common': separator('Common'),
  'hello-world': '"Hello World!" ğŸš§',
  spa: 'Single Page Application ğŸš§',
  'public-api': 'Public RESTful API ğŸš§',
  multitenant: 'Multitenancy',
  saas: 'SaaS framework ğŸš§',

  '#customization': separator('Customization'),
  customization: 'Customization ğŸš§',

  '#codegen': separator('Code Generation'),
  codegen: 'Code generation ğŸš§',
  nestjs: 'RPC for NestJS ğŸš§',

  '#ai': separator('AI'),
  llm: 'LLM integration ğŸš§',
  'ai-tools': 'AI tools ğŸš§',
  'ai-ui': 'AI-powered UI ğŸ§ª ğŸš§',
  polling: 'Real-time Polling ğŸ§ª ğŸš§',
  mcp: 'MCP Server ğŸš§',

  '#etc': separator('etc.'),
  cron: 'Vercel Cron jobs ğŸš§',
  authorization: 'Authorization ğŸš§',
  proxy: 'Proxy endpoints ğŸš§',
  'react-query': 'React Query ğŸš§',
  'dev-https': 'HTTPs in development ğŸš§',
} satisfies MetaRecord;

export const icons: Omit<Record<keyof typeof meta, string>, `#${string}`> = {
  saas: 'i',
  'public-api': 'i',
  spa: 'i',
  nestjs: 'i',
  proxy: 'i',
  llm: 'i',
  'ai-tools': 'i',
  'ai-ui': 'i',
  cron: 'i',
  authorization: 'i',
  customization: 'i',
  codegen: 'i',
  multitenant: 'i',
  'react-query': 'i',
  'dev-https': 'i',
  'hello-world': 'i',
  mcp: 'i',
  polling: 'i',
};

export default meta;
